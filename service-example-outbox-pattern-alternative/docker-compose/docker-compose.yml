version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
    - kafka-network  

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    hostname: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9094,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://:9094,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ps augwwx | egrep [S]upportedKafka
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
    - kafka-network

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.1
    hostname: kafka-rest-proxy
    ports:
    - "8082:8082"
    environment:
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9094
    depends_on:
    - zookeeper
    - kafka
    networks:
    - kafka-network

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    hostname: kafka-topics-ui
    ports:
    - "9000:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
    depends_on:
    - zookeeper
    - kafka
    - kafka-rest-proxy
    networks:
    - kafka-network

  mongodb:
    image: candis/mongo-replica-set
    container_name: mongodb
    ports:
        - 27017:27017
        - 27018:27018
        - 27019:27019
    environment:
      - MONGO_INITDB_DATABASE=test
    networks:
    - kafka-network

networks:
  kafka-network:
#    name: "kafka_default"